; RUN: llvm-pdbdump -symbols %p/Inputs/symbolformat.pdb | FileCheck --check-prefix=SYM_FORMAT %s
; RUN: llvm-pdbdump -types %p/Inputs/symbolformat.pdb | FileCheck --check-prefix=TYPES_FORMAT %s
; RUN: llvm-pdbdump -types -class-definitions %p/Inputs/symbolformat.pdb | FileCheck --check-prefix=FULL_CLASS %s

; The format is func [0x<rva_start>+<prologue_length> - 0x<rva_end>-<epilogue_length>]
; SYM_FORMAT: symbolformat-fpo.obj
; SYM_FORMAT-DAG: func [{{.*}}] (FPO) unsigned __cdecl fpo_func(unsigned n)
; SYM_FORMAT: symbolformat.obj
; SYM_FORMAT-DAG: func [{{.*}}] (EBP) int __cdecl _purecall()
; SYM_FORMAT-DAG: func [{{.*}}] (EBP) int __cdecl main(int argc, char** argv)
; SYM_FORMAT-DAG: func [{{.*}}] (EBP) void A::A()
; SYM_FORMAT-DAG: func [{{.*}}] (EBP) void B::B()
; SYM_FORMAT-DAG: thunk [{{.*}}] (Pcode) B::`vcall'{0}'
; SYM_FORMAT-DAG: func [{{.*}}] (EBP) virtual void B::PureFunc()
; SYM_FORMAT-DAG: func [{{.*}}] (EBP) void A::RegularFunc()
; SYM_FORMAT-DAG: func [{{.*}}] (EBP) virtual void A::VirtualFunc()

; TYPES_FORMAT: Enums
; TYPES_FORMAT-DAG: enum TestEnum
; TYPES_FORMAT-DAG: enum TestEnumClass
; TYPES_FORMAT: Function Signatures
; TYPES_FORMAT-DAG: int __cdecl ()
; TYPES_FORMAT-DAG: int __cdecl (int, char**)
; TYPES_FORMAT-DAG: void (A::)()
; TYPES_FORMAT-DAG: void (B::)()
; TYPES_FORMAT-DAG: void (B::)(B&)
; TYPES_FORMAT-DAG: void (B::)()
; TYPES_FORMAT-DAG: B& (B::)(B&)
; TYPES_FORMAT-DAG: void (A::)(A&)
; TYPES_FORMAT-DAG: void (A::)()
; TYPES_FORMAT-DAG: A& (A::)(A&)
; TYPES_FORMAT: Typedefs
; TYPES_FORMAT-DAG: typedef int IntType
; TYPES_FORMAT-DAG: typedef class A ClassAType
; TYPES_FORMAT: Classes
; TYPES_FORMAT-DAG: class A
; TYPES_FORMAT-DAG: class B

; FULL_CLASS: Classes
; FULL_CLASS-DAG: class A {
; FULL_CLASS: public:
; FULL_CLASS: virtual void PureFunc() = 0
; FULL_CLASS: virtual void VirtualFunc()
; FULL_CLASS: void RegularFunc()
; FULL_CLASS: }
; FULL_CLASS-DAG: class MemberTest {
; FULL_CLASS: data +0x00 MemberTest::NestedEnum m_nested_enum
; FULL_CLASS: data +0x04 int m_typedef
; FULL_CLASS: data +0x08 bool m_bool
; FULL_CLASS: data +0x09 char m_char
; FULL_CLASS: data +0x0a wchar_t m_wchar_t
; FULL_CLASS: data +0x0c int m_int
; FULL_CLASS: data +0x10 unsigned m_unsigned
; FULL_CLASS: data +0x14 long m_long
; FULL_CLASS: data +0x18 unsigned long m_unsigned_long
; FULL_CLASS: data +0x20 __int64 m_int64
; FULL_CLASS: data +0x28 unsigned __int64 m_unsigned_int64
; FULL_CLASS: data +0x30 float m_float
; FULL_CLASS: data +0x38 double m_double
; FULL_CLASS: data +0x40 void (__cdecl *m_pfn_2_args)(int, double)
; FULL_CLASS: }